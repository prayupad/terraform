# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: Terraform Destroy
trigger:
- none

variables:
  - name: tfresourceGroup
    value: 'terraformRG'
  - name: tfstorageAccount
    value: 'tfstoragepu'
  - name: tfcontainer
    value: 'tfstate'
  - name: tfkey
    value: 'labphaseOne.tfstate'

pool:
  vmImage: ubuntu-latest

stages :
  - stage: Validate
    jobs:
    - job: validate
      continueOnError: false

      steps:
        - task: TerraformInstaller@0
          displayName: install
          inputs:
            terraformVersion: 'v1.2.2'
        - task: TerraformCLI@0
          displayName: init
          inputs:
            command: 'init'
            commandOptions: '-reconfigure'
            backendType: 'azurerm'
            backendServiceArm: 'terraform'
            backendAzureRmSubscriptionId: '14c83b29-a1c0-4f29-b32c-9b94ba49886f'
            backendAzureRmResourceGroupName: '$(tfresourceGroup)'
            backendAzureRmStorageAccountName: '$(tfstorageAccount)'
            backendAzureRmContainerName: '$(tfcontainer)'
            backendAzureRmKey: '$(tfkey)'
            workingDirectory: '$(System.DefaultWorkingDirectory)/incubationlab'

        - task: TerraformCLI@0
          displayName: validate
          inputs:
            command: 'validate'
            workingDirectory: '$(System.DefaultWorkingDirectory)/incubationlab'
            allowTelemetryCollection: false

  - stage: Destroy
    dependsOn: [validate]
    condition: succeeded('validate')
    jobs:
    - job: terraform_destroy
      steps:
      - checkout: self
      - task: TerraformInstaller@0
        displayName: 'install'
        inputs:
          terraformVersion: 'v1.2.2'
              
      - task: TerraformCLI@0
        displayName: 'init'
        inputs:
            command: 'init'
            commandOptions: '-input=false'
            backendType: 'azurerm'
            backendServiceArm: 'terraform'
            backendAzureRmSubscriptionId: '14c83b29-a1c0-4f29-b32c-9b94ba49886f'
            backendAzureRmResourceGroupName: '$(tfresourceGroup)'
            backendAzureRmStorageAccountName: '$(tfStorageAccount)'
            backendAzureRmContainerName: '$(tfcontainer)'
            backendAzureRmKey: '$(tfkey)'
            workingDirectory: '$(System.DefaultWorkingDirectory)/incubationlab'

      - task: TerraformCLI@0
        displayName: 'validate'
        inputs:
          command: 'validate'
          workingDirectory: '$(System.DefaultWorkingDirectory)/incubationlab'        
                
      - task: TerraformCLI@0
        displayName: 'destroy'
        inputs:
          command: 'destroy'
          workingDirectory: '$(System.DefaultWorkingDirectory)/incubationlab'
          environmentServiceName: 'terraform'
          commandOptions: '-input=false'
          allowTelemetryCollection: false        

